spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order_service
spring.datasource.username=mysql
spring.datasource.password=mysql2
spring.jpa.hibernate.ddl-auto=update

server.port=9091

eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=order-service

## Actuator
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true
management.endpoint.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4j Properties
## see different states of circuit breaker - e.g. closed/open/ho
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
## size for the events
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
## Count of requests (when to open and close the state
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
## After 5 failed request the CB will change from closed to open state
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
## 50% of the calls have failed
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
## Wait at open state before changing to half-open state
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
## How many calls we can allow in half-open state (to check if communication is fine)
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
## Automatically transition from open to half-open
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

## R4JTimeout
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

## R4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

# Zipkin Properties
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

# Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.dimitar.orderservice.event.OrderPlacedEvent
